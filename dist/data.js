var f=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var S=(h,u)=>{for(var n in u)f(h,n,{get:u[n],enumerable:!0})},D=(h,u,n,l)=>{if(u&&typeof u=="object"||typeof u=="function")for(let d of x(u))!E.call(h,d)&&d!==n&&f(h,d,{get:()=>u[d],enumerable:!(l=p(u,d))||l.enumerable});return h};var q=h=>D(f({},"__esModule",{value:!0}),h);var O={};S(O,{MeterData:()=>w});module.exports=q(O);var a=require("fs"),b=require("path");var o=(_=>(_[_.none=0]="none",_[_.hp=1]="hp",_[_.mp=2]="mp",_[_.str=3]="str",_[_.agi=4]="agi",_[_.int=5]="int",_[_.con=6]="con",_[_.str_x=7]="str_x",_[_.agi_x=8]="agi_x",_[_.int_x=9]="int_x",_[_.con_x=10]="con_x",_[_.criticalhit=15]="criticalhit",_[_.specialty=16]="specialty",_[_.oppression=17]="oppression",_[_.rapidity=18]="rapidity",_[_.endurance=19]="endurance",_[_.mastery=20]="mastery",_[_.criticalhit_x=21]="criticalhit_x",_[_.specialty_x=22]="specialty_x",_[_.oppression_x=23]="oppression_x",_[_.rapidity_x=24]="rapidity_x",_[_.endurance_x=25]="endurance_x",_[_.mastery_x=26]="mastery_x",_[_.max_hp=27]="max_hp",_[_.max_mp=28]="max_mp",_[_.max_hp_x=29]="max_hp_x",_[_.max_mp_x=30]="max_mp_x",_[_.max_hp_x_x=31]="max_hp_x_x",_[_.max_mp_x_x=32]="max_mp_x_x",_[_.normal_hp_recovery=33]="normal_hp_recovery",_[_.combat_hp_recovery=34]="combat_hp_recovery",_[_.normal_hp_recovery_rate=35]="normal_hp_recovery_rate",_[_.combat_hp_recovery_rate=36]="combat_hp_recovery_rate",_[_.normal_mp_recovery=37]="normal_mp_recovery",_[_.combat_mp_recovery=38]="combat_mp_recovery",_[_.normal_mp_recovery_rate=39]="normal_mp_recovery_rate",_[_.combat_mp_recovery_rate=40]="combat_mp_recovery_rate",_[_.self_recovery_rate=41]="self_recovery_rate",_[_.drain_hp_dam_rate=42]="drain_hp_dam_rate",_[_.drain_mp_dam_rate=43]="drain_mp_dam_rate",_[_.dam_reflection_rate=44]="dam_reflection_rate",_[_.char_attack_dam=47]="char_attack_dam",_[_.skill_effect_dam_addend=48]="skill_effect_dam_addend",_[_.attack_power_rate=49]="attack_power_rate",_[_.skill_damage_rate=50]="skill_damage_rate",_[_.attack_power_rate_x=51]="attack_power_rate_x",_[_.skill_damage_rate_x=52]="skill_damage_rate_x",_[_.cooldown_reduction=53]="cooldown_reduction",_[_.paralyzation_point_rate=54]="paralyzation_point_rate",_[_.def=55]="def",_[_.res=56]="res",_[_.def_x=57]="def_x",_[_.res_x=58]="res_x",_[_.def_x_x=59]="def_x_x",_[_.res_x_x=60]="res_x_x",_[_.def_pen_rate=67]="def_pen_rate",_[_.res_pen_rate=68]="res_pen_rate",_[_.physical_inc_rate=69]="physical_inc_rate",_[_.magical_inc_rate=70]="magical_inc_rate",_[_.self_shield_rate=71]="self_shield_rate",_[_.hit_rate=72]="hit_rate",_[_.dodge_rate=73]="dodge_rate",_[_.critical_hit_rate=74]="critical_hit_rate",_[_.critical_res_rate=75]="critical_res_rate",_[_.critical_dam_rate=76]="critical_dam_rate",_[_.attack_speed=77]="attack_speed",_[_.attack_speed_rate=78]="attack_speed_rate",_[_.move_speed=79]="move_speed",_[_.move_speed_rate=80]="move_speed_rate",_[_.prop_move_speed=81]="prop_move_speed",_[_.prop_move_speed_rate=82]="prop_move_speed_rate",_[_.vehicle_move_speed=83]="vehicle_move_speed",_[_.vehicle_move_speed_rate=84]="vehicle_move_speed_rate",_[_.ship_move_speed=85]="ship_move_speed",_[_.ship_move_speed_rate=86]="ship_move_speed_rate",_[_.fire_dam_rate=87]="fire_dam_rate",_[_.ice_dam_rate=88]="ice_dam_rate",_[_.electricity_dam_rate=89]="electricity_dam_rate",_[_.earth_dam_rate=91]="earth_dam_rate",_[_.dark_dam_rate=92]="dark_dam_rate",_[_.holy_dam_rate=93]="holy_dam_rate",_[_.elements_dam_rate=94]="elements_dam_rate",_[_.fire_res_rate=95]="fire_res_rate",_[_.ice_res_rate=96]="ice_res_rate",_[_.electricity_res_rate=97]="electricity_res_rate",_[_.earth_res_rate=99]="earth_res_rate",_[_.dark_res_rate=100]="dark_res_rate",_[_.holy_res_rate=101]="holy_res_rate",_[_.elements_res_rate=102]="elements_res_rate",_[_.self_cc_time_rate=105]="self_cc_time_rate",_[_.enemy_cc_time_rate=106]="enemy_cc_time_rate",_[_.identity_value1=107]="identity_value1",_[_.identity_value2=108]="identity_value2",_[_.identity_value3=109]="identity_value3",_[_.awakening_dam_rate=110]="awakening_dam_rate",_[_.item_drop_rate=111]="item_drop_rate",_[_.gold_rate=112]="gold_rate",_[_.exp_rate=113]="exp_rate",_[_.attack_power_addend=123]="attack_power_addend",_[_.npc_species_humanoid_dam_rate=125]="npc_species_humanoid_dam_rate",_[_.npc_species_devil_dam_rate=126]="npc_species_devil_dam_rate",_[_.npc_species_substance_dam_rate=127]="npc_species_substance_dam_rate",_[_.npc_species_undead_dam_rate=128]="npc_species_undead_dam_rate",_[_.npc_species_plant_dam_rate=129]="npc_species_plant_dam_rate",_[_.npc_species_insect_dam_rate=130]="npc_species_insect_dam_rate",_[_.npc_species_spirit_dam_rate=131]="npc_species_spirit_dam_rate",_[_.npc_species_wild_beast_dam_rate=132]="npc_species_wild_beast_dam_rate",_[_.npc_species_mechanic_dam_rate=133]="npc_species_mechanic_dam_rate",_[_.npc_species_ancient_dam_rate=134]="npc_species_ancient_dam_rate",_[_.npc_species_god_dam_rate=135]="npc_species_god_dam_rate",_[_.npc_species_archfiend_dam_rate=136]="npc_species_archfiend_dam_rate",_[_.vitality=137]="vitality",_[_.ship_booter_speed=138]="ship_booter_speed",_[_.ship_wreck_speed_rate=139]="ship_wreck_speed_rate",_[_.island_speed_rate=140]="island_speed_rate",_[_.attack_power_sub_rate_1=141]="attack_power_sub_rate_1",_[_.attack_power_sub_rate_2=142]="attack_power_sub_rate_2",_[_.physical_inc_sub_rate_1=143]="physical_inc_sub_rate_1",_[_.physical_inc_sub_rate_2=144]="physical_inc_sub_rate_2",_[_.magical_inc_sub_rate_1=145]="magical_inc_sub_rate_1",_[_.magical_inc_sub_rate_2=146]="magical_inc_sub_rate_2",_[_.skill_damage_sub_rate_1=147]="skill_damage_sub_rate_1",_[_.skill_damage_sub_rate_2=148]="skill_damage_sub_rate_2",_[_.resource_recovery_rate=149]="resource_recovery_rate",_[_.weapon_dam=151]="weapon_dam",_))(o||{});var w=class{dbPath="";modulePath;enums;npc;PCData;skill;skillBuff;skillEffect;combatEffect;esther;constructor(u="./meter-core/data"){this.modulePath=u,this.enums=new Map,this.npc=new Map,this.PCData=new Map,this.skill=new Map,this.skillBuff=new Map,this.skillEffect=new Map,this.combatEffect=new Map,this.esther=[]}processEnumData(u){for(let[n,l]of Object.entries(u)){let d=new Map;for(let[s,k]of Object.entries(l))d.set(s,k);this.enums.set(n,d)}}processNpcData(u){for(let n of Object.values(u))this.npc.set(n.id,n)}processPCData(u){for(let[n,l]of Object.entries(u))this.PCData.set(parseInt(n),l)}processSkillData(u){for(let n of Object.values(u))this.skill.set(n.id,n)}processSkillBuffData(u){for(let n of Object.values(u))this.skillBuff.set(n.id,n)}processSkillBuffEffectData(u){for(let n of Object.values(u))this.skillEffect.set(n.id,n)}processCombatEffectData(u){for(let n of Object.values(u))this.combatEffect.set(n.id,n)}processEsther(u){this.esther=Object.values(u)}getNpcName(u){return this.npc.get(u)?.name||""}getClassName(u){return this.PCData.get(u)||""}getSkillName(u){return this.skill.get(u)?.name||""}getSkillClassId(u){return this.skill.get(u)?.classid||0}getSkillEffectComment(u){return this.skillEffect.get(u)?.comment||""}getSkillEffectDirectionalMask(u){return this.skillEffect.get(u)?.directionalmask||0}getSkillEsther(u){for(let n of this.esther)if(n.skills.includes(u))return n}getNpcEsther(u){for(let n of this.esther)if(n.npcs.includes(u))return n}getStatusEffectHeaderData(u){let n=this.skillBuff.get(u);if(!n||n.iconshowtype==="none")return;let l;n.buffcategory==="ability"&&[501,502,503,504,505].includes(n.uniquegroup)?l="dropsofether":l=n.buffcategory;let d={target:n.target==="none"?0:n.target==="self"?2:1,category:n.category,buffcategory:l,bufftype:this.getStatusEffectBuffTypeFlags(n),uniquegroup:n.uniquegroup,source:{name:n.name,desc:n.desc,icon:n.icon}};if(l==="classskill"||l==="identity"){let s;if(n.sourceskill)s=this.skill.get(n.sourceskill),s&&(d.source.skill=s);else{let k=Math.floor(u/100)*10;if(s=this.skill.get(k),!s){let v=Math.floor(n.uniquegroup/100)*10;s=this.skill.get(v)}s&&(d.source.skill=s)}s&&(d.source.skill=s)}else if(l==="ability"&&n.uniquegroup!==0){let s;if(n.sourceskill)s=this.skill.get(n.sourceskill),s&&(d.source.skill=s);else{let k=Math.floor(u/100)*10;if(s=this.skill.get(k),!s){let v=Math.floor(n.uniquegroup/100)*10;s=this.skill.get(v)}}s&&(d.source.skill=s)}else l==="set"&&n.setname&&(d.source.setname=n.setname);return d}getStatusEffectBuffTypeFlags(u){let n=0;return["weaken_defense","weaken_resistance","skill_damage_amplify","beattacked_damage_amplify","skill_damage_amplify_attack","directional_attack_amplify","instant_stat_amplify","attack_power_amplify","instant_stat_amplify_by_contents"].includes(u.type)?n|=1:["move_speed_down","all_speed_down"].includes(u.type)?n|=8:["reset_cooldown"].includes(u.type)?n|=128:["change_ai_point","ai_point_amplify"].includes(u.type)?n|=256:["increase_identity_gauge"].includes(u.type)&&(n|=64),u.passiveoption.forEach(l=>{if(l.type==="stat"){let d=o[l.keystat];if(!d)return;[20,26,54].includes(d)&&(n|=256),[18,24,53].includes(d)&&(n|=128),[28,30,32,37,38,39,40,149].includes(d)&&(n|=64),[6,10,27,29,31,33,34,35,36,41,42,137].includes(d)&&(n|=16),(55<=d&&d<=70||[19,25].includes(d))&&(u.category==="buff"&&l.value>=0||u.category==="debuff"&&l.value<=0?n|=1:n|=32),79<=d&&d<=84&&(n|=8),[77,78,18,24].includes(d)&&(n|=4),[74,15,21].includes(d)&&(n|=2),(141<=d&&d<=148||87<=d&&d<=94||[3,4,5,7,8,9,47,49,50,51,52,72,73,76,110,123,151].includes(d))&&(u.category==="buff"&&l.value>=0||u.category==="debuff"&&l.value<=0?n|=1:n|=32)}else if(l.type==="skill_critical_ratio")n|=2;else if(["skill_damage","class_option","skill_group_damage","skill_critical_damage","skill_penetration"].includes(l.type))u.category==="buff"&&l.value>=0||u.category==="debuff"&&l.value<=0?n|=1:n|=32;else if(["skill_cooldown_reduction","skill_group_cooldown_reduction"].includes(l.type))n|=128;else if(["skill_mana_reduction","mana_reduction"].includes(l.type))n|=64;else if(l.type==="combat_effect"){let d=this.combatEffect.get(l.keyindex);if(!d)return;d.actions.forEach(s=>{["modify_damage","modify_final_damage","modify_critical_multiplier","modify_penetration","modify_penetration_when_critical","modify_penetration_addend","modify_penetration_addend_when_critical","modify_damage_shield_multiplier"].includes(s.type)?n|=1:s.type==="modify_critical_ratio"&&(n|=2)})}}),n}getStatPairMap(u){let n=new Map;return u.forEach(l=>{n.set(l.StatType,l.Value)}),n}isSupportClassId(u){return u===105||u===204||u===602}isBattleItem(u,n){let l=this.skillEffect.get(u)?.itemcategory;switch(n){case"attack":return l==="useup_battle_item_common_attack";case"buff":return l==="useup_battle_item_common_buff";case"function":return l==="useup_battle_item_common_function";default:return typeof l=="string"}}getBattleItemName(u){return this.skillEffect.get(u)?.itemname||""}loadDbs(u){this.dbPath=u,this.processEnumData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"Enums.json"),"utf-8"))),this.processNpcData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"Npc.json"),"utf-8"))),this.processPCData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"PCData.json"),"utf-8"))),this.processSkillData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"Skill.json"),"utf-8"))),this.processSkillBuffData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"SkillBuff.json"),"utf-8"))),this.processSkillBuffEffectData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"SkillEffect.json"),"utf-8"))),this.processCombatEffectData(JSON.parse((0,a.readFileSync)((0,b.join)(u,"CombatEffect.json"),"utf-8"))),this.processEsther(JSON.parse((0,a.readFileSync)((0,b.join)(u,"Esther.json"),"utf-8")))}};0&&(module.exports={MeterData});
