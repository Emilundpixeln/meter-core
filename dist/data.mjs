import{a as o}from"./chunk-JWW2Y3M4.mjs";import"./chunk-UEW5MVPI.mjs";import"./chunk-K7C7TUE5.mjs";import{readFileSync as a}from"fs";import{join as n}from"path";var f=class{dbPath="";modulePath;enums;npc;PCData;skill;skillBuff;skillEffect;combatEffect;esther;constructor(t="./meter-core/data"){this.modulePath=t,this.enums=new Map,this.npc=new Map,this.PCData=new Map,this.skill=new Map,this.skillBuff=new Map,this.skillEffect=new Map,this.combatEffect=new Map,this.esther=[]}processEnumData(t){for(let[e,s]of Object.entries(t)){let i=new Map;for(let[r,l]of Object.entries(s))i.set(r,l);this.enums.set(e,i)}}processNpcData(t){for(let e of Object.values(t))this.npc.set(e.id,e)}processPCData(t){for(let[e,s]of Object.entries(t))this.PCData.set(parseInt(e),s)}processSkillData(t){for(let e of Object.values(t))this.skill.set(e.id,e)}processSkillBuffData(t){for(let e of Object.values(t))this.skillBuff.set(e.id,e)}processSkillBuffEffectData(t){for(let e of Object.values(t))this.skillEffect.set(e.id,e)}processCombatEffectData(t){for(let e of Object.values(t))this.combatEffect.set(e.id,e)}processEsther(t){this.esther=Object.values(t)}getNpcName(t){return this.npc.get(t)?.name||""}getClassName(t){return this.PCData.get(t)||""}getSkillName(t){return this.skill.get(t)?.name||""}getSkillClassId(t){return this.skill.get(t)?.classid||0}getSkillEffectComment(t){return this.skillEffect.get(t)?.comment||""}getSkillEffectDirectionalMask(t){return this.skillEffect.get(t)?.directionalmask||0}getSkillEsther(t){for(let e of this.esther)if(e.skills.includes(t))return e}getNpcEsther(t){for(let e of this.esther)if(e.npcs.includes(t))return e}getStatusEffectHeaderData(t){let e=this.skillBuff.get(t);if(!e||e.iconshowtype==="none")return;let s;e.buffcategory==="ability"&&[501,502,503,504,505].includes(e.uniquegroup)?s="dropsofether":s=e.buffcategory;let i={target:e.target==="none"?0:e.target==="self"?2:1,category:e.category,buffcategory:s,bufftype:this.getStatusEffectBuffTypeFlags(e),uniquegroup:e.uniquegroup,source:{name:e.name,desc:e.desc,icon:e.icon}};if(s==="classskill"||s==="identity"){let r;if(e.sourceskill)r=this.skill.get(e.sourceskill),r&&(i.source.skill=r);else{let l=Math.floor(t/100)*10;if(r=this.skill.get(l),!r){let c=Math.floor(e.uniquegroup/100)*10;r=this.skill.get(c)}r&&(i.source.skill=r)}r&&(i.source.skill=r)}else if(s==="ability"&&e.uniquegroup!==0){let r;if(e.sourceskill)r=this.skill.get(e.sourceskill),r&&(i.source.skill=r);else{let l=Math.floor(t/100)*10;if(r=this.skill.get(l),!r){let c=Math.floor(e.uniquegroup/100)*10;r=this.skill.get(c)}}r&&(i.source.skill=r)}else s==="set"&&e.setname&&(i.source.setname=e.setname);return i}getStatusEffectBuffTypeFlags(t){let e=0;return["weaken_defense","weaken_resistance","skill_damage_amplify","beattacked_damage_amplify","skill_damage_amplify_attack","directional_attack_amplify","instant_stat_amplify","attack_power_amplify","instant_stat_amplify_by_contents"].includes(t.type)?e|=1:["move_speed_down","all_speed_down"].includes(t.type)?e|=8:["reset_cooldown"].includes(t.type)?e|=128:["change_ai_point","ai_point_amplify"].includes(t.type)?e|=256:["increase_identity_gauge"].includes(t.type)&&(e|=64),t.passiveoption.forEach(s=>{if(s.type==="stat"){let i=o[s.keystat];if(!i)return;[20,26,54].includes(i)&&(e|=256),[18,24,53].includes(i)&&(e|=128),[28,30,32,37,38,39,40,149].includes(i)&&(e|=64),[6,10,27,29,31,33,34,35,36,41,42,137].includes(i)&&(e|=16),(55<=i&&i<=70||[19,25].includes(i))&&(t.category==="buff"&&s.value>=0||t.category==="debuff"&&s.value<=0?e|=1:e|=32),79<=i&&i<=84&&(e|=8),[77,78,18,24].includes(i)&&(e|=4),[74,15,21].includes(i)&&(e|=2),(141<=i&&i<=148||87<=i&&i<=94||[3,4,5,7,8,9,47,49,50,51,52,72,73,76,110,123,151].includes(i))&&(t.category==="buff"&&s.value>=0||t.category==="debuff"&&s.value<=0?e|=1:e|=32)}else if(s.type==="skill_critical_ratio")e|=2;else if(["skill_damage","class_option","skill_group_damage","skill_critical_damage","skill_penetration"].includes(s.type))t.category==="buff"&&s.value>=0||t.category==="debuff"&&s.value<=0?e|=1:e|=32;else if(["skill_cooldown_reduction","skill_group_cooldown_reduction"].includes(s.type))e|=128;else if(["skill_mana_reduction","mana_reduction"].includes(s.type))e|=64;else if(s.type==="combat_effect"){let i=this.combatEffect.get(s.keyindex);if(!i)return;i.actions.forEach(r=>{["modify_damage","modify_final_damage","modify_critical_multiplier","modify_penetration","modify_penetration_when_critical","modify_penetration_addend","modify_penetration_addend_when_critical","modify_damage_shield_multiplier"].includes(r.type)?e|=1:r.type==="modify_critical_ratio"&&(e|=2)})}}),e}getStatPairMap(t){let e=new Map;return t.forEach(s=>{e.set(s.StatType,s.Value)}),e}isSupportClassId(t){return t===105||t===204||t===602}isBattleItem(t,e){let s=this.skillEffect.get(t)?.itemcategory;switch(e){case"attack":return s==="useup_battle_item_common_attack";case"buff":return s==="useup_battle_item_common_buff";case"function":return s==="useup_battle_item_common_function";default:return typeof s=="string"}}getBattleItemName(t){return this.skillEffect.get(t)?.itemname||""}loadDbs(t){this.dbPath=t,this.processEnumData(JSON.parse(a(n(t,"Enums.json"),"utf-8"))),this.processNpcData(JSON.parse(a(n(t,"Npc.json"),"utf-8"))),this.processPCData(JSON.parse(a(n(t,"PCData.json"),"utf-8"))),this.processSkillData(JSON.parse(a(n(t,"Skill.json"),"utf-8"))),this.processSkillBuffData(JSON.parse(a(n(t,"SkillBuff.json"),"utf-8"))),this.processSkillBuffEffectData(JSON.parse(a(n(t,"SkillEffect.json"),"utf-8"))),this.processCombatEffectData(JSON.parse(a(n(t,"CombatEffect.json"),"utf-8"))),this.processEsther(JSON.parse(a(n(t,"Esther.json"),"utf-8")))}};export{f as MeterData};
