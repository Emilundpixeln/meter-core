import"./chunk-C4F6RPWQ.mjs";import{TypedEmitter as p}from"tiny-typed-emitter";var h=(s=>(s[s.InitEnv=1]="InitEnv",s[s.PhaseTransition=2]="PhaseTransition",s[s.NewPC=3]="NewPC",s[s.NewNpc=4]="NewNpc",s[s.Death=5]="Death",s[s.SkillStart=6]="SkillStart",s[s.SkillStage=7]="SkillStage",s[s.Damage=8]="Damage",s[s.Heal=9]="Heal",s[s.Buff=10]="Buff",s[s.BuffRemove=11]="BuffRemove",s[s.CounterAttack=12]="CounterAttack",s[s.Line15=15]="Line15",s[s.Debug=251]="Debug",s[s.PacketDump=252]="PacketDump",s[s.Version=253]="Version",s[s.Error=254]="Error",s))(h||{}),g=class extends p{#s;emitText;emitLines;emitObjects;#g;#i;#m;#c;#n;constructor(a,n,r={}){super(),this.#s=n,this.emitText=r.emitText||!0,this.emitLines=r.emitLines||!0,this.emitObjects=r.emitObjects||!1,this.#g=new Set,this.#i=new c,this.#m=!1,this.#c=!1,this.#n={name:"You",class:0,gearLevel:0},a.on("PKTAuthTokenResult",t=>{}).on("PKTCounterAttackNotify",t=>{if(this.#t){let e=t.parsed;this.#e(12,e.SourceId,this.#a(e.SourceId),e.TargetId,this.#a(e.TargetId))}}).on("PKTDeathNotify",t=>{if(this.#t){let e=t.parsed;this.#e(5,e.TargetId,this.#a(e.TargetId),e.SourceId,this.#a(e.SourceId))}}).on("PKTInitEnv",t=>{let e=t.parsed;this.#i=new c;let i={entityId:e.PlayerId,entityType:m.Player,name:this.#n.name,class:this.#n.class,gearLevel:this.#n.gearLevel};this.#i.entities.set(i.entityId,i),this.#t&&this.#e(1,i.entityId)}).on("PKTInitPC",t=>{let e=t.parsed;this.#n={name:e.Name,class:e.ClassId,gearLevel:this.#d(e.GearLevel)};let i={entityId:e.PlayerId,entityType:m.Player,name:e.Name,class:e.ClassId,gearLevel:this.#d(e.GearLevel)};this.#i.entities.set(i.entityId,i);let o=this.#r(t.parsed.statPair);this.#t&&this.#e(3,i.entityId,i.name,i.class,this.#s.getClassName(i.class),e.Level,i.gearLevel,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewNpc",t=>{let e=t.parsed,i={entityId:e.NpcStruct.ObjectId,entityType:m.Npc,name:this.#s.getNpcName(e.NpcStruct.TypeId),typeId:e.NpcStruct.TypeId};this.#i.entities.set(i.entityId,i);let o=this.#r(t.parsed.NpcStruct.statPair);this.#t&&this.#e(4,i.entityId,i.typeId,i.name,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewNpcSummon",t=>{let e=t.parsed,i={entityId:e.NpcData.ObjectId,entityType:m.Summon,name:e.NpcData.ObjectId.toString(16),ownerId:e.OwnerId};this.#i.entities.set(i.entityId,i)}).on("PKTNewPC",t=>{let e=t.parsed,i={entityId:e.PCStruct.PlayerId,entityType:m.Player,name:e.PCStruct.Name,class:e.PCStruct.ClassId,gearLevel:this.#d(e.PCStruct.GearLevel)};this.#i.entities.set(i.entityId,i);let o=this.#r(t.parsed.PCStruct.statPair);this.#t&&this.#e(3,i.entityId,i.name,i.class,this.#s.getClassName(i.class),e.PCStruct.Level,i.gearLevel,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewProjectile",t=>{let e=t.parsed,i={entityId:e.projectileInfo.ProjectileId,entityType:m.Projectile,name:e.projectileInfo.ProjectileId.toString(16),ownerId:e.projectileInfo.OwnerId};this.#i.entities.set(i.entityId,i)}).on("PKTParalyzationStateNotify",t=>{}).on("PKTPartyInfo",t=>{}).on("PKTPartyLeaveResult",t=>{}).on("PKTPartyStatusEffectAddNotify",t=>{}).on("PKTPartyStatusEffectRemoveNotify",t=>{}).on("PKTPartyStatusEffectResultNotify",t=>{}).on("PKTRaidBossKillNotify",t=>{this.#t&&this.#e(2,1)}).on("PKTRaidResult",t=>{this.#t&&this.#e(2,0)}).on("PKTRemoveObject",t=>{}).on("PKTSkillDamageAbnormalMoveNotify",t=>{if(this.#t){let e=t.parsed,i=this.#l(e.SourceId),o=this.#s.getSkillName(e.SkillId),d=this.#s.getSkillEffectComment(e.SkillEffectId);i=this.#o(i,e.SkillId),e.SkillDamageAbnormalMoveEvents.forEach(l=>{(l.skillDamageEvent.Modifier&15)===11&&e.SkillId==0,e.SkillEffectId!=0&&this.#e(8,i.entityId,i.name,e.SkillId,o,e.SkillEffectId,d,l.skillDamageEvent.TargetId,this.#a(l.skillDamageEvent.TargetId),Number(l.skillDamageEvent.Damage),l.skillDamageEvent.Modifier,Number(l.skillDamageEvent.CurHp),Number(l.skillDamageEvent.MaxHp))})}}).on("PKTSkillDamageNotify",t=>{if(this.#t){let e=t.parsed,i=this.#l(e.SourceId),o=this.#s.getSkillName(e.SkillId),d=this.#s.getSkillEffectComment(e.SkillEffectId);i=this.#o(i,e.SkillId),e.SkillDamageEvents.forEach(l=>{(l.Modifier&15)===11&&e.SkillId==0,e.SkillEffectId!=0&&this.#e(8,i.entityId,i.name,e.SkillId,o,e.SkillEffectId,d,l.TargetId,this.#a(l.TargetId),Number(l.Damage),l.Modifier,Number(l.CurHp),Number(l.MaxHp))})}}).on("PKTSkillStageNotify",t=>{if(this.#t){let e=t.parsed,i=this.#l(e.SourceId);i=this.#o(i,e.SkillId),this.#e(7,i.entityId,i.name,e.SkillId,this.#s.getSkillName(e.SkillId),e.Stage)}}).on("PKTSkillStartNotify",t=>{if(this.#t){let e=t.parsed,i=this.#l(e.SourceId);i=this.#o(i,e.SkillId),this.#e(6,i.entityId,i.name,e.SkillId,this.#s.getSkillName(e.SkillId))}}).on("PKTStatChangeOriginNotify",t=>{if(this.#t){let e=t.parsed,i=this.#r(t.parsed.StatPairList),o=this.#r(t.parsed.Unk1);this.#e(9,e.ObjectId,this.#a(e.ObjectId),Number(o.get(1))||0,Number(i.get(1))||0)}}).on("PKTStatusEffectAddNotify",t=>{}).on("PKTStatusEffectRemoveNotify",t=>{}).on("PKTTriggerBossBattleStatus",t=>{this.#t&&this.#e(2,2)}).on("PKTTriggerFinishNotify",t=>{}).on("PKTTriggerStartNotify",t=>{switch(t.parsed.TriggerSignalType){case 57:case 59:case 61:case 63:case 74:case 76:this.#c=!0,this.#m=!1;break;case 58:case 60:case 62:case 64:case 75:case 77:this.#c=!1,this.#m=!0;break}})}#e(a,...n){if(this.emitText){let r=`${a}|${new Date().toISOString()}|${n.map(t=>typeof t=="bigint"?t.toString(16):t).join("|")}`;this.emit("line",r)}this.emitLines&&this.emit(a,...n)}get#t(){return this.emitText||this.emitLines}#l(a){let n=this.#i.entities.get(a);if((n?.entityType===m.Projectile||n?.entityType===m.Summon)&&(a=n.ownerId),n=this.#i.entities.get(a),!n){let r={entityId:a,entityType:m.Npc,name:a.toString(16)};return this.#i.entities.set(a,r),r}return n}#o(a,n){let r=this.#s.getSkillClassId(n);if(r!==0){let t;if(a.entityType===m.Player){let e=a;t={entityId:e.entityId,entityType:m.Player,name:e.name,class:r,gearLevel:e.gearLevel}}else t={entityId:a.entityId,entityType:m.Player,name:a.entityId.toString(16),class:r,gearLevel:0};return this.#i.entities.set(a.entityId,t),this.#e(3,t.entityId,t.name,t.class,this.#s.getClassName(t.class),1,t.gearLevel,0,0),t}return a}#a(a){return this.#i.entities.get(a)?.name||a.toString(16)}#r(a){let n=new Map;return a.forEach(r=>{n.set(r.Unk0_0_1,r.readNBytesInt64)}),n}#d(a){let n=Buffer.alloc(4);return n.writeUInt32LE(a),Math.round(n.readFloatLE()*100)/100}},c=class{start;entities;constructor(){this.start=Date.now(),this.entities=new Map}},m=(t=>(t[t.Player=0]="Player",t[t.Npc=1]="Npc",t[t.Summon=2]="Summon",t[t.Projectile=3]="Projectile",t))(m||{});export{g as LegacyLogger,h as LineId};
