import"./chunk-C4F6RPWQ.mjs";import{TypedEmitter as p}from"tiny-typed-emitter";var h=(s=>(s[s.InitEnv=1]="InitEnv",s[s.PhaseTransition=2]="PhaseTransition",s[s.NewPC=3]="NewPC",s[s.NewNpc=4]="NewNpc",s[s.Death=5]="Death",s[s.SkillStart=6]="SkillStart",s[s.SkillStage=7]="SkillStage",s[s.Damage=8]="Damage",s[s.Heal=9]="Heal",s[s.Buff=10]="Buff",s[s.BuffRemove=11]="BuffRemove",s[s.CounterAttack=12]="CounterAttack",s[s.Line15=15]="Line15",s[s.Debug=251]="Debug",s[s.PacketDump=252]="PacketDump",s[s.Version=253]="Version",s[s.Error=254]="Error",s))(h||{}),g=class extends p{#s;emitText;emitLines;emitObjects;#g;#i;#m;#c;#n;constructor(a,n,l={}){super(),this.#s=n,this.emitText=l.emitText||!0,this.emitLines=l.emitLines||!0,this.emitObjects=l.emitObjects||!1,this.#g=new Set,this.#i=new c,this.#m=!1,this.#c=!1,this.#n={name:"You",class:0,gearLevel:0},a.on("PKTAuthTokenResult",e=>{}).on("PKTCounterAttackNotify",e=>{if(this.#e){let t=e.parsed;this.#t(12,t.SourceId,this.#a(t.SourceId),t.TargetId,this.#a(t.TargetId))}}).on("PKTDeathNotify",e=>{if(this.#e){let t=e.parsed;this.#t(5,t.TargetId,this.#a(t.TargetId),t.SourceId,this.#a(t.SourceId))}}).on("PKTInitEnv",e=>{let t=e.parsed;this.#i=new c;let i={entityId:t.PlayerId,entityType:m.Player,name:this.#n.name,class:this.#n.class,gearLevel:this.#n.gearLevel};this.#i.entities.set(i.entityId,i),this.#e&&this.#t(1,i.entityId)}).on("PKTInitPC",e=>{let t=e.parsed;this.#n={name:t.Name,class:t.ClassId,gearLevel:this.#d(t.GearLevel)};let i={entityId:t.PlayerId,entityType:m.Player,name:t.Name,class:t.ClassId,gearLevel:this.#d(t.GearLevel)};this.#i.entities.set(i.entityId,i);let o=this.#r(e.parsed.statPair);this.#e&&this.#t(3,i.entityId,i.name,i.class,this.#s.getClassName(i.class),t.Level,i.gearLevel,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewNpc",e=>{let t=e.parsed,i={entityId:t.NpcStruct.ObjectId,entityType:m.Npc,name:this.#s.getNpcName(t.NpcStruct.TypeId),typeId:t.NpcStruct.TypeId};this.#i.entities.set(i.entityId,i);let o=this.#r(e.parsed.NpcStruct.statPair);this.#e&&this.#t(4,i.entityId,i.typeId,i.name,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewNpcSummon",e=>{let t=e.parsed,i={entityId:t.NpcData.ObjectId,entityType:m.Summon,name:t.NpcData.ObjectId.toString(16),ownerId:t.OwnerId};this.#i.entities.set(i.entityId,i)}).on("PKTNewPC",e=>{let t=e.parsed,i={entityId:t.PCStruct.PlayerId,entityType:m.Player,name:t.PCStruct.Name,class:t.PCStruct.ClassId,gearLevel:this.#d(t.PCStruct.GearLevel)};this.#i.entities.set(i.entityId,i);let o=this.#r(e.parsed.PCStruct.statPair);this.#e&&this.#t(3,i.entityId,i.name,i.class,this.#s.getClassName(i.class),t.PCStruct.Level,i.gearLevel,Number(o.get(1))||0,Number(o.get(27))||0)}).on("PKTNewProjectile",e=>{let t=e.parsed,i={entityId:t.projectileInfo.ProjectileId,entityType:m.Projectile,name:t.projectileInfo.ProjectileId.toString(16),ownerId:t.projectileInfo.OwnerId};this.#i.entities.set(i.entityId,i)}).on("PKTParalyzationStateNotify",e=>{}).on("PKTPartyInfo",e=>{}).on("PKTPartyLeaveResult",e=>{}).on("PKTPartyStatusEffectAddNotify",e=>{}).on("PKTPartyStatusEffectRemoveNotify",e=>{}).on("PKTPartyStatusEffectResultNotify",e=>{}).on("PKTRaidBossKillNotify",e=>{this.#e&&this.#t(2,1)}).on("PKTRaidResult",e=>{this.#e&&this.#t(2,0)}).on("PKTRemoveObject",e=>{}).on("PKTSkillDamageAbnormalMoveNotify",e=>{if(this.#e){let t=e.parsed,i=this.#l(t.SourceId),o=this.#s.getSkillName(t.SkillId),d=this.#s.getSkillEffectComment(t.SkillEffectId);i=this.#o(i,t.SkillId),t.SkillDamageAbnormalMoveEvents.forEach(r=>{(r.skillDamageEvent.Modifier&15)===11&&t.SkillId==0,t.SkillEffectId!=0&&this.#t(8,i.entityId,i.name,t.SkillId,o,t.SkillEffectId,d,r.skillDamageEvent.TargetId,this.#a(r.skillDamageEvent.TargetId),Number(r.skillDamageEvent.Damage),r.skillDamageEvent.Modifier,Number(r.skillDamageEvent.CurHp),Number(r.skillDamageEvent.MaxHp))})}}).on("PKTSkillDamageNotify",e=>{if(this.#e){let t=e.parsed,i=this.#l(t.SourceId),o=this.#s.getSkillName(t.SkillId),d=this.#s.getSkillEffectComment(t.SkillEffectId);i=this.#o(i,t.SkillId),t.SkillDamageEvents.forEach(r=>{(r.Modifier&15)===11&&t.SkillId==0,t.SkillEffectId!=0&&this.#t(8,i.entityId,i.name,t.SkillId,o,t.SkillEffectId,d,r.TargetId,this.#a(r.TargetId),Number(r.Damage),r.Modifier,Number(r.CurHp),Number(r.MaxHp))})}}).on("PKTSkillStageNotify",e=>{if(this.#e){let t=e.parsed,i=this.#l(t.SourceId);i=this.#o(i,t.SkillId),this.#t(7,i.entityId,i.name,t.SkillId,this.#s.getSkillName(t.SkillId),t.Stage)}}).on("PKTSkillStartNotify",e=>{if(this.#e){let t=e.parsed,i=this.#l(t.SourceId);i=this.#o(i,t.SkillId),this.#t(6,i.entityId,i.name,t.SkillId,this.#s.getSkillName(t.SkillId))}}).on("PKTStatChangeOriginNotify",e=>{if(this.#e){let t=e.parsed,i=this.#r(e.parsed.StatPairList),o=this.#r(e.parsed.Unk1);this.#t(9,t.ObjectId,this.#a(t.ObjectId),Number(o.get(1))||0,Number(i.get(1))||0)}}).on("PKTStatusEffectAddNotify",e=>{}).on("PKTStatusEffectRemoveNotify",e=>{}).on("PKTTriggerBossBattleStatus",e=>{this.#e&&this.#t(2,2)}).on("PKTTriggerFinishNotify",e=>{}).on("PKTTriggerStartNotify",e=>{switch(e.parsed.TriggerSignalType){case 57:case 59:case 61:case 63:case 74:case 76:this.#c=!0,this.#m=!1;break;case 58:case 60:case 62:case 64:case 75:case 77:this.#c=!1,this.#m=!0;break}})}#t(a,...n){if(this.emitText){let l=`${a}|${new Date().toISOString()}|${n.map(e=>typeof e=="bigint"?e.toString(16):e).join("|")}`;this.emit("line",l)}this.emitLines&&this.emit(a,...n)}get#e(){return this.emitText||this.emitLines}#l(a){let n=this.#i.entities.get(a);if((n?.entityType===m.Projectile||n?.entityType===m.Summon)&&(a=n.ownerId),n=this.#i.entities.get(a),!n){let l={entityId:a,entityType:m.Npc,name:a.toString(16)};return this.#i.entities.set(a,l),l}return n}#o(a,n){let l=this.#s.getSkillClassId(n);if(a.entityType!==m.Player&&l!==0){let e={entityId:a.entityId,entityType:m.Player,name:a.entityId.toString(16),class:l,gearLevel:0};return this.#i.entities.set(a.entityId,e),this.#t(3,e.entityId,e.name,e.class,this.#s.getClassName(e.class),1,e.gearLevel,0,0),e}return a}#a(a){return this.#i.entities.get(a)?.name||a.toString(16)}#r(a){let n=new Map;return a.forEach(l=>{n.set(l.Unk0_0_1,l.readNBytesInt64)}),n}#d(a){let n=Buffer.alloc(4);return n.writeUInt32LE(a),Math.round(n.readFloatLE()*100)/100}},c=class{start;entities;constructor(){this.start=Date.now(),this.entities=new Map}},m=(e=>(e[e.Player=0]="Player",e[e.Npc=1]="Npc",e[e.Summon=2]="Summon",e[e.Projectile=3]="Projectile",e))(m||{});export{g as LegacyLogger,h as LineId};
