"use strict";var h=Object.create;var l=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var d=(o,r)=>{for(var e in r)l(o,e,{get:r[e],enumerable:!0})},u=(o,r,e,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of b(r))!g.call(o,s)&&s!==e&&l(o,s,{get:()=>r[s],enumerable:!(n=y(r,s))||n.enumerable});return o};var w=(o,r,e)=>(e=o!=null?h(p(o)):{},u(r||!o||!o.__esModule?l(e,"default",{value:o,enumerable:!0}):e,o)),x=o=>u(l({},"__esModule",{value:!0}),o);var B={};d(B,{Decompressor:()=>t});module.exports=x(B);var a=require("lz4-napi"),f=w(require("oodle")),c=require("snappyjs"),t=class{oodle;xorTable;logerror;constructor(r,e,n){if(this.oodle=new f.default.Oodle(r),e.length!=256)throw new Error("Invalid xorTable length");this.xorTable=e,this.logerror=n}decrypt(r,e,n,s){switch(s&&this.xor(r,e),n){case 0:return r.subarray(16);case 1:return(0,a.uncompressSync)(r).subarray(16);case 2:return(0,c.uncompress)(r).subarray(16);case 3:{let i=r.readUInt32LE(0),m=Buffer.alloc(i);return r=this.oodle.decode(r.subarray(4),m),r.subarray(16)}default:throw new Error(`Unknown compression: ${n}`)}}xor(r,e){for(let n=0;n<r.length;n++)r[n]^=this.xorTable[e++%256]}};0&&(module.exports={Decompressor});
