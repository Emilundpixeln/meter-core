"use strict";var h=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty;var m=(o,r)=>{for(var e in r)t(o,e,{get:r[e],enumerable:!0})},a=(o,r,e,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of b(r))!d.call(o,l)&&l!==e&&t(o,l,{get:()=>r[l],enumerable:!(n=p(r,l))||n.enumerable});return o};var w=(o,r,e)=>(e=o!=null?h(g(o)):{},a(r||!o||!o.__esModule?t(e,"default",{value:o,enumerable:!0}):e,o)),y=o=>a(t({},"__esModule",{value:!0}),o);var k={};m(k,{Decompressor:()=>c});module.exports=y(k);var f=require("lz4-napi"),u=w(require("oodle")),i=require("snappyjs"),c=class{oodle;xorTable;logErrorFunc;constructor(r,e,n){if(this.oodle=new u.default.Oodle(r),e.length!=256)throw new Error("Invalid xorTable length");this.xorTable=e,this.logErrorFunc=n}decrypt(r,e,n,l){l&&this.xor(r,e);let s;switch(n){case 0:{s=r;break}case 1:{s=(0,f.uncompressSync)(r);break}case 2:{s=(0,i.uncompress)(r);break}case 3:{if(r.length<4)throw new Error(`Invalid oodle packet: size=${r.length}, comp=${n}, opcode=${e}`);s=this.oodle.decode(r.subarray(4),r.readUInt32LE(0));break}default:throw new Error(`Unknown compression: ${n}`)}if(s.length<16)throw new Error(`Invalid packet: size=${s.length}, comp=${n}, opcode=${e}`);return s.subarray(16)}xor(r,e){for(let n=0;n<r.length;n++)r[n]^=this.xorTable[e++%256]}};0&&(module.exports={Decompressor});
