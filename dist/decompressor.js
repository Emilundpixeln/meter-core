"use strict";var a=Object.create;var u=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var B=(e,r)=>{for(var o in r)u(e,o,{get:r[o],enumerable:!0})},l=(e,r,o,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of p(r))!w.call(e,n)&&n!==o&&u(e,n,{get:()=>r[n],enumerable:!(s=m(r,n))||s.enumerable});return e};var x=(e,r,o)=>(o=e!=null?a(b(e)):{},l(r||!e||!e.__esModule?u(o,"default",{value:e,enumerable:!0}):o,e)),d=e=>l(u({},"__esModule",{value:!0}),e);var g={};B(g,{Decompressor:()=>f});module.exports=d(g);var t=require("lz4-napi"),c=x(require("oodle")),i=require("snappy"),f=class{oodle;xorTable;constructor(r,o){if(this.oodle=new c.default.Oodle(r),o.length!=256)throw new Error("Invalid xorTable length");this.xorTable=o}decrypt(r,o=0,s=0,n=0){switch(n&&this.xor(r,o),s){case 0:return r.subarray(16);case 1:return(0,t.uncompressSync)(r).subarray(16);case 2:return(0,i.uncompressSync)(r).subarray(16);case 3:{let h=r.readUInt32LE(0),y=Buffer.alloc(h);return r=this.oodle.decode(r.subarray(4),y),r.subarray(16)}default:throw new Error(`Unknown compression: ${s}`)}}xor(r,o){for(let s=0;s<r.length;s++)r[s]^=this.xorTable[o++%256]}};0&&(module.exports={Decompressor});
