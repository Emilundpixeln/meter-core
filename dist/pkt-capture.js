"use strict";var g=Object.create;var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var T=(t,e)=>{for(var s in e)c(t,s,{get:e[s],enumerable:!0})},v=(t,e,s,f)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of w(e))!P.call(t,i)&&i!==s&&c(t,i,{get:()=>e[i],enumerable:!(f=y(e,i))||f.enumerable});return t};var I=(t,e,s)=>(s=t!=null?g(C(t)):{},v(e||!t||!t.__esModule?c(s,"default",{value:t,enumerable:!0}):s,t)),x=t=>v(c({},"__esModule",{value:!0}),t);var R={};T(R,{PktCapture:()=>u,PktCaptureAll:()=>b,deviceList:()=>M,findDevice:()=>E});module.exports=x(R);var h=I(require("cap")),B=require("os"),k=require("tiny-typed-emitter"),{findDevice:E,deviceList:M}=h.default.Cap,{Ethernet:N,PROTOCOL:d,IPV4:O,TCP:L}=h.default.decoders;var u=class extends k.TypedEmitter{c;buffer;constructor(e){super(),this.c=new h.default.Cap,this.buffer=Buffer.alloc(65535);let s=this.c.open(e,"tcp and src port 6040",10*1024*1024,this.buffer),f=new m;this.c.setMinBytes&&this.c.setMinBytes(6),this.c.on("packet",(i,o)=>{if(s==="ETHERNET"){let n=N(this.buffer);if(n.info.type===d.ETHERNET.IPV4){let r=O(this.buffer,n.offset);if(r.info.protocol===d.IP.TCP){let p=r.info.totallen-r.hdrlen,l=L(this.buffer,r.offset);if(p-=l.hdrlen,p){f.write(Buffer.from(this.buffer.subarray(l.offset,l.offset+p)));let a=f.read();for(;a;)this.emit("packet",a),a=f.read()}}}}})}close(){this.c.close()}},b=class extends k.TypedEmitter{caps;constructor(e=!1){super(),this.caps=new Map;for(let[s,f]of Object.entries((0,B.networkInterfaces)()))if(f){for(let i of f)if(!(!e&&i.internal)&&i.family==="IPv4"){let o=E(i.address);if(o){let n=new u(o);n.on("packet",r=>this.emit("packet",r,s)),this.caps.set(i.address,n)}}}}close(){for(let e of this.caps.values())e.close()}},m=class{buffer;position;out;constructor(){this.buffer=null,this.position=0,this.out=[]}write(e){for(;e.length>0;){if(this.buffer){if(this.buffer.length<2){let i=this.buffer[0],o=(e[0]<<8)+i;this.buffer=Buffer.alloc(o),this.buffer[0]=i,this.position=1}let f=Math.min(e.length,this.buffer.length-this.position);e.copy(this.buffer,this.position,0,f),this.position+=f,this.position===this.buffer.length&&(this.out.push(this.buffer),this.buffer=null,this.position=0),e=e.subarray(f);continue}if(e.length<2){this.buffer=Buffer.from(e),this.position=e.length;break}let s=e.readUInt16LE(0);if(s>e.length)break;this.out.push(Buffer.from(e.subarray(0,s))),e=e.subarray(s)}}read(){return this.out.shift()}};0&&(module.exports={PktCapture,PktCaptureAll,deviceList,findDevice});
