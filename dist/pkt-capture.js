"use strict";var B=Object.create;var c=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var I=(s,t)=>{for(var e in t)c(s,e,{get:t[e],enumerable:!0})},d=(s,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of C(t))!T.call(s,i)&&i!==e&&c(s,i,{get:()=>t[i],enumerable:!(o=w(t,i))||o.enumerable});return s};var x=(s,t,e)=>(e=s!=null?B(P(s)):{},d(t||!s||!s.__esModule?c(e,"default",{value:s,enumerable:!0}):e,s)),M=s=>d(c({},"__esModule",{value:!0}),s);var z={};I(z,{PktCapture:()=>u,PktCaptureAll:()=>m,deviceList:()=>N,findDevice:()=>y});module.exports=M(z);var h=x(require("cap")),g=require("os"),v=require("tiny-typed-emitter"),{findDevice:y,deviceList:N}=h.default.Cap,{Ethernet:O,PROTOCOL:E,IPV4:L,TCP:R}=h.default.decoders;var u=class extends v.TypedEmitter{c;constructor(t){super(),this.c=new h.default.Cap;let e=Buffer.alloc(65535),o=this.c.open(t,"tcp and src port 6040",10*1024*1024,e),i=new k;this.c.setMinBytes&&this.c.setMinBytes(6),this.c.on("packet",(f,p)=>{if(o==="ETHERNET"){let n=O(e);if(n.info.type===E.ETHERNET.IPV4){let r=L(e,n.offset);if(r.info.protocol===E.IP.TCP){let l=r.info.totallen-r.hdrlen,a=R(e,r.offset);if(l-=a.hdrlen,l){i.write(Buffer.from(e.subarray(a.offset,a.offset+l)));let b=i.read();for(;b;)this.emit("packet",b),b=i.read()}}}}})}close(){this.c.close()}},m=class extends v.TypedEmitter{caps;constructor(t=!1){super(),this.caps=new Map;for(let[e,o]of Object.entries((0,g.networkInterfaces)()))if(o){for(let i of o)if(!(!t&&i.internal)&&i.family==="IPv4"){let f=y(i.address);if(f){let p=new u(f);p.on("packet",n=>this.emit("packet",n,e)),this.caps.set(i.address,p)}}}}close(){for(let t of this.caps.values())t.close()}},k=class{buffer;position;out;constructor(){this.buffer=null,this.position=0,this.out=[]}write(t){for(;t.length>0;){if(this.buffer){if(this.buffer.length<2){let i=this.buffer[0],f=(t[0]<<8)+i;this.buffer=Buffer.alloc(f),this.buffer[0]=i,this.position=1}let o=Math.min(t.length,this.buffer.length-this.position);t.copy(this.buffer,this.position,0,o),this.position+=o,this.position===this.buffer.length&&(this.out.push(this.buffer),this.buffer=null,this.position=0),t=t.subarray(o);continue}if(t.length<2){this.buffer=Buffer.from(t),this.position=t.length;break}let e=t.readUInt16LE(0);if(e>t.length)break;this.out.push(t.subarray(0,e)),t=t.subarray(e)}}read(){return this.out.shift()}};0&&(module.exports={PktCapture,PktCaptureAll,deviceList,findDevice});
