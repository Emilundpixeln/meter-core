"use strict";var v=Object.create;var r=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var C=(s,t)=>{for(var e in t)r(s,e,{get:t[e],enumerable:!0})},b=(s,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of d(t))!B.call(s,i)&&i!==e&&r(s,i,{get:()=>t[i],enumerable:!(o=E(t,i))||o.enumerable});return s};var P=(s,t,e)=>(e=s!=null?v(y(s)):{},b(t||!s||!s.__esModule?r(e,"default",{value:s,enumerable:!0}):e,s)),T=s=>b(r({},"__esModule",{value:!0}),s);var L={};C(L,{PktCapture:()=>n,PktCaptureAll:()=>p,deviceList:()=>k,findDevice:()=>w});module.exports=T(L);var a=require("tiny-typed-emitter"),c=P(require("cap")),g=require("net"),{findDevice:w,deviceList:k}=c.default.Cap,{Ethernet:x,PROTOCOL:m,IPV4:I,TCP:M}=c.default.decoders;var n=class extends a.TypedEmitter{c;device;constructor(t){super(),this.device=t,this.c=new c.default.Cap;let e=Buffer.alloc(65535),o=this.c.open(t,"tcp and src port 6040",65535,e),i=new l;this.c.setMinBytes&&this.c.setMinBytes(16),this.c.on("packet",()=>{if(o==="ETHERNET"){let f=x(e);if(f.info.type===m.ETHERNET.IPV4&&(f=I(e,f.offset),f.info.protocol===m.IP.TCP)){let h=f.info.totallen-f.hdrlen;if(f=M(e,f.offset),h-=f.hdrlen,h){i.write(Buffer.from(e.subarray(f.offset,f.offset+h)));let u=i.read();for(;u;)this.emit("packet",u),u=i.read()}}}})}close(){this.c.close()}},p=class extends a.TypedEmitter{caps;constructor(){super(),this.caps=new Map;for(let t of k())for(let e of t.addresses)if((0,g.isIPv4)(e.addr)){let o=new n(t.name);o.on("packet",i=>this.emit("packet",i,t.name)),this.caps.set(t.name,o)}}close(){for(let t of this.caps.values())t.close()}},l=class{buffer;position;out;constructor(){this.buffer=null,this.position=0,this.out=[]}write(t){for(;t.length>0;){if(this.buffer){if(this.buffer.length<2){let i=this.buffer[0],f=(t[0]<<8)+i;this.buffer=Buffer.alloc(f),this.buffer[0]=i,this.position=1}let o=Math.min(t.length,this.buffer.length-this.position);t.copy(this.buffer,this.position,0,o),this.position+=o,this.position===this.buffer.length&&(this.out.push(this.buffer),this.buffer=null,this.position=0),t=t.subarray(o);continue}if(t.length<2){this.buffer=Buffer.from(t),this.position=t.length;break}let e=t.readUInt16LE(0);if(e>t.length){this.buffer=Buffer.alloc(e),t.copy(this.buffer),this.position=t.length;break}this.out.push(t.subarray(0,e)),t=t.subarray(e)}}read(){return this.out.shift()}};0&&(module.exports={PktCapture,PktCaptureAll,deviceList,findDevice});
