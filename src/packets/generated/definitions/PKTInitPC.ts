// Auto Generated, do not edit.
import { Read } from "../../stream";
import * as StatusEffectData from "../structures/StatusEffectData";
import * as ReadNBytesInt64 from "../../common/ReadNBytesInt64";
import * as PeriodUpdateStatData from "../structures/PeriodUpdateStatData";
export type PKTInitPC = {
  unk0: Buffer;
  unk1: number;
  unk2: number;
  unk3: number;
  unk4: number;
  unk5: number;
  unk6: number;
  statusEffectDatas: StatusEffectData.StatusEffectData[];
  unk8: bigint;
  unk9: number;
  unk10: number;
  unk11: number;
  struct_97: Buffer;
  unk13: number;
  unk14: number;
  unk15: number;
  unk16: number;
  unk17: number;
  unk18: number;
  level: number;
  unk20: number;
  unk21: number;
  unk22: number;
  unk24_0?: number;
  unk25: number;
  unk26: Buffer;
  unk27: number;
  unk28: number;
  unk29: number;
  unk30: bigint;
  unk31: number;
  unk32: number;
  unk33: number;
  struct_220: Buffer;
  unk35: bigint;
  unk36: number;
  name: string;
  unk38: number;
  statPair: { statType: number; value: bigint }[];
  struct_334: string;
  unk41: number;
  unk42: number;
  gearLevel: number;
  unk44: Buffer;
  characterId: bigint;
  unk46: number;
  unk47: bigint;
  unk48: number;
  playerId: bigint;
  unk50: number;
  periodUpdateStatDataList: PeriodUpdateStatData.PeriodUpdateStatData[];
  classId: number;
  unk53: number;
  struct_340: Buffer;
  unk55: number;
  unk56: number;
  unk57: number;
};
export function read(buf: Buffer) {
  const reader = new Read(buf);
  const data = {} as PKTInitPC;
  data.unk0 = reader.bytes(35);
  data.unk1 = reader.u8();
  data.unk2 = reader.u16();
  data.unk3 = reader.u32();
  data.unk4 = reader.u32();
  data.unk5 = reader.u32();
  data.unk6 = reader.u32();
  data.statusEffectDatas = reader.array(reader.u16(), () => StatusEffectData.read(reader), 80);
  data.unk8 = reader.u64();
  data.unk9 = reader.u8();
  data.unk10 = reader.u8();
  data.unk11 = reader.u8();
  data.struct_97 = reader.bytes(reader.u16(), 58);
  data.unk13 = reader.u8();
  data.unk14 = reader.u8();
  data.unk15 = reader.u8();
  data.unk16 = reader.u8();
  data.unk17 = reader.u32();
  data.unk18 = reader.u32();
  data.level = reader.u16();
  data.unk20 = reader.u16();
  data.unk21 = reader.u32();
  data.unk22 = reader.u8();
  if (reader.bool()) data.unk24_0 = reader.u32();
  data.unk25 = reader.u8();
  data.unk26 = reader.bytes(120);
  data.unk27 = reader.u8();
  data.unk28 = reader.u32();
  data.unk29 = reader.u8();
  data.unk30 = reader.u64();
  data.unk31 = reader.u8();
  data.unk32 = reader.u32();
  data.unk33 = reader.u8();
  data.struct_220 = reader.bytes(reader.u16(), 3, 17);
  data.unk35 = reader.u64();
  data.unk36 = reader.u8();
  data.name = reader.string(20);
  data.unk38 = reader.u8();
  data.statPair = reader.array(
    reader.u16(),
    () => {
      const k = {} as { statType: number; value: bigint };
      k.statType = reader.u8();
      k.value = ReadNBytesInt64.read(reader);
      return k;
    },
    152
  );
  data.struct_334 = reader.string(7);
  data.unk41 = reader.u16();
  data.unk42 = reader.u8();
  data.gearLevel = reader.f32();
  data.unk44 = reader.bytes(25);
  data.characterId = reader.u64();
  data.unk46 = reader.u32();
  data.unk47 = reader.u64();
  data.unk48 = reader.u16();
  data.playerId = reader.u64();
  data.unk50 = reader.u8();
  data.periodUpdateStatDataList = reader.array(reader.u16(), () => PeriodUpdateStatData.read(reader), 5);
  data.classId = reader.u16();
  data.unk53 = reader.u8();
  data.struct_340 = reader.bytes(reader.u16(), 104, 30);
  data.unk55 = reader.u32();
  data.unk56 = reader.u8();
  data.unk57 = reader.u32();
  return data;
}
export const name = "PKTInitPC";
export const opcode = 54051;
