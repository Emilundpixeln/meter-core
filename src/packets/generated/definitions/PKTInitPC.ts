// Auto Generated, do not edit.
import { Read } from "../../stream";
import * as ReadNBytesInt64 from "../../common/ReadNBytesInt64";
import * as PeriodUpdateStatData from "../structures/PeriodUpdateStatData";
import * as StatusEffectData from "../structures/StatusEffectData";
export type PKTInitPC = {
  unk0: number;
  gearLevel: number;
  unk2: number;
  characterId: bigint;
  unk4: number;
  unk5: number;
  unk6: number;
  level: number;
  struct_336: Buffer;
  struct_330: string;
  unk10: number;
  unk11: number;
  unk12: number;
  unk13: Buffer;
  unk14: number;
  unk15: number;
  unk16: bigint;
  struct_222: Buffer;
  unk18: number;
  unk19: number;
  unk20: number;
  unk21: number;
  unk22: number;
  unk23: Buffer;
  unk24: number;
  unk25: number;
  unk26: number;
  statPair: { statType: number; value: bigint }[];
  unk28: number;
  unk29: bigint;
  unk30: number;
  unk31: bigint;
  playerId: bigint;
  periodUpdateStatDataList: PeriodUpdateStatData.PeriodUpdateStatData[];
  unk34: bigint;
  unk35: number;
  unk36: Buffer;
  name: string;
  unk38: number;
  unk39: number;
  unk40: number;
  unk41: number;
  struct_102: Buffer;
  classId: number;
  unk44: number;
  unk45: number;
  statusEffectDatas: StatusEffectData.StatusEffectData[];
  unk47: number;
  unk48: bigint;
  unk49: number;
  unk51_0?: number;
  unk52: number;
  unk53: number;
  unk54: number;
  unk55: number;
  unk56: number;
  unk57: number;
};
export function read(buf: Buffer) {
  const reader = new Read(buf);
  const data = {} as PKTInitPC;
  data.unk0 = reader.u32();
  data.gearLevel = reader.f32();
  data.unk2 = reader.u32();
  data.characterId = reader.u64();
  data.unk4 = reader.u16();
  data.unk5 = reader.u32();
  data.unk6 = reader.u8();
  data.level = reader.u16();
  data.struct_336 = reader.bytes(reader.u16(), 104, 30);
  data.struct_330 = reader.string(7);
  data.unk10 = reader.u8();
  data.unk11 = reader.u32();
  data.unk12 = reader.u32();
  data.unk13 = reader.bytes(120);
  data.unk14 = reader.u8();
  data.unk15 = reader.u8();
  data.unk16 = reader.u64();
  data.struct_222 = reader.bytes(reader.u16(), 3, 17);
  data.unk18 = reader.u32();
  data.unk19 = reader.u8();
  data.unk20 = reader.u32();
  data.unk21 = reader.u8();
  data.unk22 = reader.u8();
  data.unk23 = reader.bytes(25);
  data.unk24 = reader.u8();
  data.unk25 = reader.u8();
  data.unk26 = reader.u8();
  data.statPair = reader.array(
    reader.u16(),
    () => {
      const j = {} as { statType: number; value: bigint };
      j.statType = reader.u8();
      j.value = ReadNBytesInt64.read(reader);
      return j;
    },
    153
  );
  data.unk28 = reader.u8();
  data.unk29 = reader.u64();
  data.unk30 = reader.u8();
  data.unk31 = reader.u64();
  data.playerId = reader.u64();
  data.periodUpdateStatDataList = reader.array(reader.u16(), () => PeriodUpdateStatData.read(reader), 5);
  data.unk34 = reader.u64();
  data.unk35 = reader.u8();
  data.unk36 = reader.bytes(35);
  data.name = reader.string(20);
  data.unk38 = reader.u8();
  data.unk39 = reader.u8();
  data.unk40 = reader.u32();
  data.unk41 = reader.u8();
  data.struct_102 = reader.bytes(reader.u16(), 63);
  data.classId = reader.u16();
  data.unk44 = reader.u8();
  data.unk45 = reader.u32();
  data.statusEffectDatas = reader.array(reader.u16(), () => StatusEffectData.read(reader), 80);
  data.unk47 = reader.u16();
  data.unk48 = reader.u64();
  data.unk49 = reader.u8();
  if (reader.bool()) data.unk51_0 = reader.u32();
  data.unk52 = reader.u16();
  data.unk53 = reader.u32();
  data.unk54 = reader.u32();
  data.unk55 = reader.u16();
  data.unk56 = reader.u8();
  data.unk57 = reader.u8();
  return data;
}
export const name = "PKTInitPC";
export const opcode = 23476;
