// Auto Generated, do not edit.
import type { Read } from "../../stream";
import * as ReadNBytesInt64 from "../../common/ReadNBytesInt64";
import * as Vector3F from "../../common/Vector3F";
export type PartyMemberData = {
  partyMemberNumber: number;
  name: string;
  gearLevel: number;
  unk3: number;
  unk4: number;
  characterId: bigint;
  zoneInstId: bigint;
  unk7: number;
  zoneId: number;
  worldId: number;
  unk10: number;
  characterLevel: number;
  curHp: bigint;
  auths: number;
  transitIndex: number;
  classId: number;
  unk16: number;
  maxHp: bigint;
  position: Vector3F.Vector3F;
  unk19: number;
};
export function read(reader: Read) {
  const data = {} as PartyMemberData;
  data.partyMemberNumber = reader.u8();
  data.name = reader.string(20);
  data.gearLevel = reader.f32();
  data.unk3 = reader.u8();
  data.unk4 = reader.u16();
  data.characterId = reader.u64();
  data.zoneInstId = reader.u64();
  data.unk7 = reader.u8();
  data.zoneId = reader.u32();
  data.worldId = reader.u8();
  data.unk10 = reader.u8();
  data.characterLevel = reader.u16();
  data.curHp = ReadNBytesInt64.read(reader);
  data.auths = reader.u8();
  data.transitIndex = reader.u32();
  data.classId = reader.u16();
  data.unk16 = reader.u8();
  data.maxHp = ReadNBytesInt64.read(reader);
  data.position = Vector3F.read(reader);
  data.unk19 = reader.u8();
  return data;
}
